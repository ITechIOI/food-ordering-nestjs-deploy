# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Roles {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  isActive: Boolean!
  name: String!
  users: [Users!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type RevenueReport {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  isActive: Boolean!
  month: Int
  year: Int
  totalOrders: Int
  totalRevenue: Int
  cancalledOrders: Int
  averageRating: Int
  restaurant: Restaurant
}

type OrderDetail {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  isActive: Boolean!
  quantity: Int
  note: String
  menu: Menu
  order: Order
}

type Menu {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  isActive: Boolean!
  name: String
  description: String
  price: Int
  quantity: Int
  imageUrl: String
  available: String
  category: Category
  orderDetail: [OrderDetail!]
}

type Category {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  isActive: Boolean!
  name: String!
  restaurant: Restaurant
  menu: [Menu!]
}

type Restaurant {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  isActive: Boolean!
  name: String
  description: String
  phone: String
  openTime: String
  closeTime: String
  rating: Int
  status: String
  address: Address
  revenueReport: [RevenueReport!]
  categories: [Category!]
  order: [Order!]
  owner: Users
}

type Address {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  isActive: Boolean!
  label: String
  province: String
  district: String
  ward: String
  street: String
  latitude: Float
  longitude: Float
  placeId: String
  restaurant: [Restaurant!]
  order: [Order!]
  user: [Users!]
}

type Discount {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  isActive: Boolean!
  code: String
  description: String
  percentage: Float
  minOrderValue: Int
  count: Int
  startTime: DateTime
  endTime: DateTime
  status: String
  order: [Order!]
}

type Payment {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  isActive: Boolean!
  transactionId: String
  paymentMethod: String
  status: String
  order: Order
}

type Complaint {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  isActive: Boolean!
  content: String
  imageUrl: String
  response: String
  seller: Users
  admin: Users
  review: Review
}

type Review {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  isActive: Boolean!
  rating: Int
  content: String
  imageUrl: String
  isNegative: String
  order: Order
  complaint: [Complaint!]
}

type Order {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  isActive: Boolean!
  totalPrice: Int
  shippingFee: Int
  status: String
  user: Users
  address: Address
  restaurant: Restaurant
  discount: Discount
  payment: [Payment!]
  review: [Review!]
  orderDetail: [OrderDetail!]
}

type Notification {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  isActive: Boolean!
  title: String
  content: String
  type: String
  isRead: String
  receiver: Users
}

type Users {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  isActive: Boolean!
  name: String
  username: String
  password: String
  email: String
  gender: String
  phone: String
  status: String
  fcmToken: String
  role: Roles!
  avatar: String
  otpCode: String
  otpExpiresAt: DateTime
  order: [Order!]
  sellerComplaint: [Complaint!]
  adminComplaint: [Complaint!]
  notification: [Notification!]
  restaurants: [Restaurant!]
  address: Address
}

type PaginatedUser {
  total: Int!
  data: [Users!]!
}

type AuthPayload {
  token: String!
}

type PaginatedNotification {
  total: Int!
  data: [Notification!]!
}

type MapPrediction {
  description: String!
  place_id: String!
}

type GoongAutoCompleteResult {
  predictions: [MapPrediction!]!
}

type GoongGeocodeResult {
  formatted_address: String!
  place_id: String!
}

type PlaceDetails {
  longitude: String!
  latitude: String!
  placeId: String!
}

type GoongDirectionResult {
  summary: String!
  distance: String!
  duration: String!
}

type PaginatedCategoryResponse {
  total: Int!
  data: [Category!]!
}

type NearestRestaurant {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  isActive: Boolean!
  name: String
  description: String
  phone: String
  openTime: String
  closeTime: String
  rating: Int
  status: String
  address: Address
  revenueReport: [RevenueReport!]
  categories: [Category!]
  order: [Order!]
  owner: Users
  distance: Float!
}

type PaginatedRestaurantResponse {
  total: Int!
  data: [Restaurant!]!
}

type PaginatedAddress {
  total: Int!
  data: [Address!]!
}

type NearestAdress {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  isActive: Boolean!
  label: String
  province: String
  district: String
  ward: String
  street: String
  latitude: Float
  longitude: Float
  placeId: String
  restaurant: [Restaurant!]
  order: [Order!]
  user: [Users!]
  distance: Float!
}

type PaginatedDiscount {
  total: Int!
  data: [Discount!]!
}

type NearbyMenuItem {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  isActive: Boolean!
  name: String
  description: String
  price: Int
  quantity: Int
  imageUrl: String
  available: String
  category: Category
  orderDetail: [OrderDetail!]
  distance: Float!
  restaurantName: String!
  categoryName: String!
}

type PaginatedMenuResponse {
  total: Int!
  data: [Menu!]!
}

type PaginatedOrder {
  total: Int!
  data: [Order!]!
}

type PaginatedOrderDetails {
  total: Int!
  data: [OrderDetail!]!
}

type PaginatedRevenueReportResponse {
  total: Int!
  data: [RevenueReport!]!
}

type PaginatedReviewResponse {
  total: Int!
  data: [Review!]!
}

type PaginatedComplaintResponse {
  total: Int!
  data: [Complaint!]!
}

type Query {
  sayHello: String!
  findAllUsers(page: Int, limit: Int): PaginatedUser!
  findUserById(id: Int!): Users!
  findAllRole: [Roles!]!
  findOne(id: Int!): Roles!
  findNotificationByUserId(userId: Int!, page: Int, limit: Int): PaginatedNotification!
  complaints(page: Int, limit: Int): PaginatedComplaintResponse!
  complaint(id: Int!): Complaint!
  review(id: Int!): Review!
  findAllOrders(page: Int, limit: Int): PaginatedOrder!
  findOrderById(id: Int!): Order!
  findOrderByUserId(userId: Int!, page: Int, limit: Int): PaginatedOrder!
  findOrdersByRestaurantId(restaurantId: Int!, page: Int, limit: Int): PaginatedOrder!
  findAllDiscounts(page: Int, limit: Int): PaginatedDiscount!
  findDiscountById(id: Int!): Discount!
  findDiscountByCode(code: String!): Discount!
  findAllAddresses(page: Int, limit: Int): PaginatedAddress!
  findAddressById(id: Int!): Address!
  nearestRestaurants(latitude: Float!, longitude: Float!, limit: Int! = 20): [NearestAdress!]!
  restaurants(page: Int, limit: Int): PaginatedRestaurantResponse!
  restaurant(id: Int!): Restaurant!
  searchNearestRestaurants(latitude: Float!, longitude: Float!, keyword: String!, limit: Int! = 10): [NearestRestaurant!]!
  searchPlace(input: String!): GoongAutoCompleteResult!
  reverseGeocode(lat: Float!, lng: Float!): [GoongGeocodeResult!]!
  direction(from: String!, to: String!): GoongDirectionResult!
  searchAddress(input: String!): PlaceDetails!
  categories(page: Int, limit: Int): PaginatedCategoryResponse!
  category(id: Int!): Category!
  findCategoriesByRestaurantId(restaurantId: Int!): [Category!]!
  menus(page: Int, limit: Int): PaginatedMenuResponse!
  findAllNotPaginate: [Menu!]!
  menu(id: Int!): Menu!
  findMenusByCategoryId(categoryId: Int!): [Menu!]!
  searchNearbyMenuItems(latitude: Float!, longitude: Float!, keyword: String!, limit: Int! = 20): [NearbyMenuItem!]!
  findMenusByImageUrl(file: Upload!, limit: Int!): [Menu!]!
  findAllOrderDetails(page: Int, limit: Int): PaginatedOrderDetails!
  findOneDetailById(id: Int!): OrderDetail!
  findOrderDetailByOrderId(orderId: Int!): [OrderDetail!]!
  payment(id: Int!): Payment!
  revenueReports(page: Int, limit: Int): PaginatedRevenueReportResponse!
  revenueReport(id: Int!): RevenueReport!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type Mutation {
  createUser(createUserInput: CreateUserInput!): Users!
  uploadAvatar(id: Int!, file: Upload!): Users!
  updateUser(updateUserInput: UpdateUserInput!): Users!
  removeUser(id: Int!): Users!
  createRole(createRoleInput: CreateRoleInput!): Roles!
  register(createUser: CreateUserInput!): AuthPayload!
  verifySignup(token: String!): AuthPayload!
  login(loginDto: CreateAuthInput!): AuthPayload!
  requestResetPassword(email: String!): AuthPayload!
  verifyChangePassword(token: String!, password: String!): AuthPayload!
  createNotification(createNotificationInput: CreateNotificationInput!): Notification!
  createComplaint(createComplaintInput: CreateComplaintInput!): Complaint!
  updateComplaint(updateComplaintInput: UpdateComplaintInput!): Complaint!
  removeComplaint(id: Int!): Complaint!
  createReview(createReviewInput: CreateReviewInput!): Review!
  updateReview(updateReviewInput: UpdateReviewInput!): Review!
  removeReview(id: Int!): Review!
  createOrder(createOrderInput: CreateOrderInput!): Order!
  updateOrder(updateOrderInput: UpdateOrderInput!): Order!
  removeOrder(id: Int!): Order!
  createDiscount(createDiscountInput: CreateDiscountInput!): Discount!
  updateDiscount(updateDiscountInput: UpdateDiscountInput!): Discount!
  removeDiscount(id: Int!): Discount!
  createAddress(createAddressInput: CreateAddressInput!): Address!
  updateAddress(updateAddressInput: UpdateAddressInput!): Address!
  removeAddress(id: Int!): Address!
  createRestaurant(createRestaurantInput: CreateRestaurantInput!): Restaurant!
  updateRestaurant(updateRestaurantInput: UpdateRestaurantInput!): Restaurant!
  removeRestaurant(id: Int!): Restaurant!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!
  removeCategory(id: Int!): Category!
  createMenu(createMenuInput: CreateMenuInput!): Menu!
  updateMenu(updateMenuInput: UpdateMenuInput!): Menu!
  removeMenu(id: Int!): Menu!
  createOrderDetail(createOrderDetailInput: CreateOrderDetailInput!): OrderDetail!
  updateOrderDetail(updateOrderDetailInput: UpdateOrderDetailInput!): OrderDetail!
  removeOrderDetail(id: Int!): OrderDetail!
  createPaypalOrder(createPaymentInput: CreatePaymentInput!): String!
  capturePaypalOrder(orderId: String!): Boolean!
  updatePayment(updatePaymentInput: UpdatePaymentInput!): Payment!
  removePayment(id: Int!): Payment!
  createRevenueReport(createRevenueReportInput: CreateRevenueReportInput!): RevenueReport!
  updateRevenueReport(updateRevenueReportInput: UpdateRevenueReportInput!): RevenueReport!
  removeRevenueReport(id: Int!): RevenueReport!
}

input CreateUserInput {
  name: String
  username: String
  password: String
  email: String
  gender: String
  addressId: Int
  phone: String
  type: Int
  roleId: Int!
  avatar: String
  otpCode: String
  otpExpiresAt: DateTime
}

input UpdateUserInput {
  name: String
  username: String
  password: String
  email: String
  gender: String
  addressId: Int
  phone: String
  type: Int
  roleId: Int
  avatar: String
  otpCode: String
  otpExpiresAt: DateTime
  id: Int!
}

input CreateRoleInput {
  name: String!
}

input CreateAuthInput {
  username: String!
  password: String!
}

input CreateNotificationInput {
  title: String!
  content: String!
  type: String!
  isRead: String!
  userId: Int!
}

input CreateComplaintInput {
  content: String
  imageUrl: String
  response: String
  sellerId: Int!
  adminId: Int!
  reviewId: Int!
}

input UpdateComplaintInput {
  content: String
  imageUrl: String
  response: String
  sellerId: Int
  adminId: Int
  reviewId: Int
  id: Int!
}

input CreateReviewInput {
  rating: Int
  content: String
  imageUrl: String
  isNegative: String
  orderId: Int!
}

input UpdateReviewInput {
  rating: Int
  content: String
  imageUrl: String
  isNegative: String
  orderId: Int
  id: Int!
}

input CreateOrderInput {
  totalPrice: Int
  status: String
  shippingFee: Int
  userId: Int
  restaurantId: Int
  discountId: Int
  addressId: Int
}

input UpdateOrderInput {
  totalPrice: Int
  status: String
  shippingFee: Int
  userId: Int
  restaurantId: Int
  discountId: Int
  addressId: Int
  id: Int!
}

input CreateDiscountInput {
  code: String
  description: String
  percentage: Float
  minOrderValue: Int
  count: Int
  startTime: DateTime
  endTime: DateTime
  status: String
}

input UpdateDiscountInput {
  code: String
  description: String
  percentage: Float
  minOrderValue: Int
  count: Int
  startTime: DateTime
  endTime: DateTime
  status: String
  id: Int!
}

input CreateAddressInput {
  label: String
  province: String
  district: String
  ward: String
  street: String
  latitude: Float!
  longitude: Float!
  placeId: String
}

input UpdateAddressInput {
  label: String
  province: String
  district: String
  ward: String
  street: String
  latitude: Float
  longitude: Float
  placeId: String
  id: Int!
}

input CreateRestaurantInput {
  name: String!
  description: String
  phone: String!
  openTime: String!
  closeTime: String!
  status: String
  addressId: Int!
  ownerId: Int!
}

input UpdateRestaurantInput {
  name: String
  description: String
  phone: String
  openTime: String
  closeTime: String
  status: String
  addressId: Int
  ownerId: Int
  id: Int!
}

input CreateCategoryInput {
  """Tên danh mục"""
  name: String!

  """ID nhà hàng"""
  restaurantId: Int
}

input UpdateCategoryInput {
  """Tên danh mục"""
  name: String

  """ID nhà hàng"""
  restaurantId: Int

  """ID danh mục cần cập nhật"""
  id: Int!
}

input CreateMenuInput {
  """Tên món ăn"""
  name: String!

  """Mô tả món ăn"""
  description: String

  """Giá món ăn"""
  price: Int!

  """Giá món ăn"""
  quantity: Int!

  """URL hình ảnh"""
  imageUrl: String

  """Trạng thái món ăn ('available' hoặc 'unavailable')"""
  available: String!

  """ID danh mục"""
  categoryId: Int!
}

input UpdateMenuInput {
  """Tên món ăn"""
  name: String

  """Mô tả món ăn"""
  description: String

  """Giá món ăn"""
  price: Int

  """Giá món ăn"""
  quantity: Int

  """URL hình ảnh"""
  imageUrl: String

  """Trạng thái món ăn ('available' hoặc 'unavailable')"""
  available: String

  """ID danh mục"""
  categoryId: Int

  """ID món ăn cần cập nhật"""
  id: Int!
}

input CreateOrderDetailInput {
  quantity: Int
  note: String
  orderId: Int
  menuId: Int
}

input UpdateOrderDetailInput {
  quantity: Int
  note: String
  orderId: Int
  menuId: Int
  id: Int!
}

input CreatePaymentInput {
  paymentMethod: String!
  orderId: Int!
  status: String!
}

input UpdatePaymentInput {
  paymentMethod: String
  orderId: Int
  status: String
  id: Int!
}

input CreateRevenueReportInput {
  month: Int
  year: Int
  totalOrders: Int
  totalRevenue: Int
  cancalledOrders: Int
  averageRating: Int
  restaurantId: Int!
}

input UpdateRevenueReportInput {
  month: Int
  year: Int
  totalOrders: Int
  totalRevenue: Int
  cancalledOrders: Int
  averageRating: Int
  restaurantId: Int
  id: Int!
}